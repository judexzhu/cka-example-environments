apiVersion: v1
kind: Namespace
metadata:
  name: qa
---
apiVersion: v1
kind: Namespace
metadata:
  name: testing
---
apiVersion: v1
kind: Namespace
metadata:
  name: staging
---
apiVersion: v1
kind: Namespace
metadata:
  name: db
---
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
---
apiVersion: v1
data:
  password: S3ZMZnRLZ3M0YVZI
  username: cHJvZHVjdGlvbi1pbnN0YW5jZQ==
kind: Secret
metadata:
  name: db1-test
  namespace: istio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-account-web
  namespace: db
---
kind: Role
metadata:
  name: role-1
  namespace: db
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
kind: RoleBinding
metadata:
  name: role-1-binding
  namespace: db
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role-1
subjects:
- kind: ServiceAccount
  name: service-account-web
  namespace: db
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: web-pod
  name: web-pod
  namespace: db
spec:
  containers:
  - image: nginx
    name: web-pod
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  serviceAccountName: service-account-web
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend
  namespace: qa
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: backend
  name: backend
  namespace: qa
spec:
  serviceAccountName: backend
  containers:
  - image: nginx
    name: backend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    id: m-2x3-api-svc
  name: m-2x3-api-svc
  namespace: management
spec:
  ports:
  - name: 4546-80
    port: 4546
    protocol: TCP
    targetPort: 80
  selector:
    id: m-2x3-api
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    id: m-2x3-web-svc
  name: m-2x3-web-svc
  namespace: management
spec:
  ports:
  - name: 4545-80
    port: 4545
    protocol: TCP
    targetPort: 80
  selector:
    id: m-2x3-web
  type: ClusterIP
---
apiVersion: scheduling.k8s.io/v1
description: I am so important
globalDefault: false
kind: PriorityClass
metadata:
  name: high-priority-important
preemptionPolicy: Never
value: 9999999
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-test
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      id: web-test
  template:
    metadata:
      labels:
        id: web-test
    spec:
      containers:
      - image: httpd:2.4-alpine
        name: httpd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-test-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      id: web-test-2
  template:
    metadata:
      labels:
        id: web-test-2
    spec:
      containers:
      - image: httpd:2.4-alpine
        name: httpd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-dev-shop
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      id: web-dev-shop
  template:
    metadata:
      labels:
        id: web-dev-shop
    spec:
      containers:
      - image: httpd:2.4-alpine
        name: httpd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-dev-shop-dev2
  namespace: development
spec:
  replicas: 2
  selector:
    matchLabels:
      id: web-dev-shop-dev2
  template:
    metadata:
      labels:
        id: web-dev-shop-dev2
    spec:
      containers:
      - image: httpd:2.4-alpine
        name: httpd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: what-a-deployment
  name: what-a-deployment
  namespace: development
spec:
  replicas: 2
  selector:
    matchLabels:
      run: what-a-deployment
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: what-a-deployment
    spec:
      containers:
      - image: nginx:1.17.6-alpine
        name: what-a-deployment
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    id: m-2x3-api
  name: m-2x3-api
  namespace: management
spec:
  replicas: 2
  selector:
    matchLabels:
      id: m-2x3-api
  template:
    metadata:
      labels:
        id: m-2x3-api
    spec:
      containers:
      - image: httpd:2.4-alpine
        name: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: m-2x3-web
  namespace: management
spec:
  replicas: 3
  selector:
    matchLabels:
      id: m-2x3-web
  template:
    metadata:
      labels:
        id: m-2x3-web
    spec:
      containers:
      - image: httpd:2.4-alpine
        name: httpd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tag: light
    type: runner
  name: m-3cc-runner
  namespace: management
spec:
  replicas: 2
  selector:
    matchLabels:
      id: m-3cc-runner
  template:
    metadata:
      creationTimestamp: null
      labels:
        id: m-3cc-runner
    spec:
      containers:
      - args:
        - sh
        - -c
        - sleep 2d
        image: python:3.7.4-alpine3.9
        name: python
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tag: heavy
    type: runner
  name: m-3cc-runner-heavy
  namespace: management
spec:
  replicas: 2
  selector:
    matchLabels:
      id: m-3cc-runner-heavy
  template:
    metadata:
      labels:
        id: m-3cc-runner-heavy
    spec:
      containers:
      - args:
        - sh
        - -c
        - sleep 2d
        image: python:3.7.4-alpine3.9
        name: python
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: important-pod
  name: important-pod
  namespace: management
spec:
  containers:
  - image: nginx:1.16.1-alpine
    name: important
  dnsPolicy: ClusterFirst
  priorityClassName: high-priority-important
  restartPolicy: Never
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: web-server
  name: web-server
  namespace: management
spec:
  containers:
  - image: nginx:1.16.1-alpine
    name: nginx
  - image: httpd:2.4.41-alpine
    name: httpd
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: legacy-app
spec:
  containers:
  - name: count
    image: busybox
    args:
    - /bin/sh
    - -c
    - >
      i=0;
      while true;
      do
        echo "$i: $(date)" >> /var/log/legacy.log;
        sleep 1;
      done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: front-end
  name: front-end
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:  
      labels:
        app: front-end
    spec:
      containers:
      - image: nginx
        name: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: loadbalancer
  name: loadbalancer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loadbalancer
  template:
    metadata:  
      labels:
        app: loadbalancer
    spec:
      containers:
      - image: nginx
        name: nginx